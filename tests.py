#!/usr/bin/env python
# vim: set expandtab tabstop=4 shiftwidth=4:

import unittest
from snakebirdsolver.app import Game, DIR_U, DIR_D, DIR_L, DIR_R, DIR_T, SNAKE_RED, SNAKE_BLUE, SNAKE_GREEN

class LevelTests(unittest.TestCase):
    """
    Tests against an entire level solve.  Clearly not the most efficient way to be
    doing these, though it should theoretically do the trick.  Note, however, that
    at the moment I'm only including levels which solve in under 1 minute on my
    CPU, so this is far from exhaustive.

    As such, two-snakebird levels are less well represented in here, as are levels
    with multiple pushable objects.  Teleporters are pretty well represented,
    though.
    """

    def test_level00_bfs(self):
        game = Game('level00.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_D),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_D),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
        ])

    def test_level01_bfs(self):
        game = Game('level01.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
        ])


    def test_level02_bfs(self):
        game = Game('level02.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
        ])


    def test_level03_bfs(self):
        game = Game('level03.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
        ])


    def test_level04_bfs(self):
        game = Game('level04.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
        ])


    def test_level05_bfs(self):
        game = Game('level05.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_D),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
        ])


    def test_level06_bfs(self):
        game = Game('level06.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
        ])


    def test_level10_bfs(self):
        game = Game('level10.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
        ])

    def test_level11_dfs(self):
        game = Game('level11.txt')
        game.solve_recurs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
        ])

    def test_level12_bfs(self):
        game = Game('level12.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
        ])

    def test_level14_bfs(self):
        game = Game('level14.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
        ])

    def test_level20_bfs(self):
        game = Game('level20.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
        ])

    def test_level21_bfs(self):
        game = Game('level21.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
        ])

    def test_level22_bfs(self):
        game = Game('level22.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_D),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_D),
            (game.level.snakebirds[SNAKE_RED], DIR_D),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_D),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
        ])

    def test_level30_bfs(self):
        game = Game('level30.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
        ])

    def test_level31_bfs(self):
        game = Game('level31.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
        ])

    def test_level32_bfs(self):
        game = Game('level32.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
        ])

    def test_level33_bfs(self):
        game = Game('level33.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
        ])

    def test_level34_bfs(self):
        game = Game('level34.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
        ])

    def test_level35_bfs(self):
        game = Game('level35.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_R),
            (game.level.snakebirds[SNAKE_BLUE], DIR_U),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_L),
            (game.level.snakebirds[SNAKE_BLUE], DIR_D),
        ])

    def test_level37_bfs(self):
        game = Game('level37.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
        ])

    def test_level42_bfs(self):
        game = Game('level42.txt')
        game.solve_bfs(quiet=True)
        self.assertEqual(game.solution, [
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_RED], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_L),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_D),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_GREEN], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
            (game.level.snakebirds[SNAKE_RED], DIR_U),
            (game.level.snakebirds[SNAKE_RED], DIR_R),
        ])

if __name__ == '__main__':

    unittest.main(verbosity=2)
